makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
makeCacheMatrix(0)
makeCacheMatrix()$set(matrix(1:16, 4, 4))
cacheSolve(makeCacheMatrix())
makeCacheMatrix
makeCacheMatrix
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
i <- x$getinverse()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
makeCacheMatrix()$set(matrix(1:16, 4, 4))
cacheSolve(makeCacheMatrix())
makeCacheMatrix()$get
makeCacheMatrix()$get()
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
i <- x$getinverse()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
CacheList <- makeCachematrix()
CacheList <- makeCacheMatrix()
CacheList$set(matrix(1:16, 4, 4))
cacheSolve(CacheList)
CacheList$get()
CacheList$getinverse()
solve(CacheList$get())
CacheList$set(matrix(1:25, 5, 5))
cacheSolve(CacheList)
CacheList$set(matrix(1:4, 2, 2))
cacheSolve(CacheList)
cacheSolve(CacheList)
CacheList$set(matrix(c(1, 35, 46, 21, 3, 5, 5, 34, 7), 3, 3))
cacheSolve(CacheList)
cacheSolve(CacheList)
